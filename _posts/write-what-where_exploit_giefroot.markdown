---
layout: post
title: "How to exploit Write-what-where by using ret2usr"
date: 2015-04-21 15:50:46 +0800
comments: true
categories: 
---

"How to exploit Write-what-where by using ret2usr - CVE-2014-4322
========================

CVE-2014-4322&ret2usr
---------------
#漏洞成因
CVE-2014-4322是2014年12月底公布的Android高通驱动漏洞，漏洞的原因官方描述为："**The qseecom driver provides an ioctl system call interface to user space clients for communication. When processing this communication, the __qseecom_update_cmd_buf function uses the user-supplied value cmd_buf_offset as an index to a buffer for write operations without any boundary checks, allowing a local application with access to the qseecom device node to, e.g., escalate privileges.**"
简单来说就是ioctl调用时没有检查传入的参数就直接改变该指针指向的值，导致可以更改任意内存。
XDA论坛的“zxz0O0”将此漏洞利用后开发出了GIEFROOT提权工具，本篇文档将会从提权利用的角度来分析此漏洞。

#漏洞细节
[漏洞代码](https://us.codeaurora.org/cgit/quic/la/kernel/msm-3.10/tree/drivers/misc/qseecom.c?h=APSS.FSM4.1.0&id=60db6b16517d6a8ab96d6760b8e1df7fe7ae1c71)
漏洞是处在ioctl接口中的
**QSEECOM_IOCTL_SEND_MODFD_CMD_REQ**部分，在这个分支中调用的**qseecom_send_modfd_cmd**函数没有对地址进行合法性检查直接对传入的指针进行赋值。

```c
uint32_t *update;
update = (uint32_t *) field;
if (cleanup)
	*update = 0;
else
	*update = (uint32_t)sg_dma_address(sg_ptr->sgl);
len += (uint32_t)sg->length;
```

简单说,这个漏洞能造成的后果就是:**用户空间可以将任意地址(内核空间以及用户空间)的值设置为任意值**.

#利用思路
这是一个典型的任意地址写漏洞,这类漏洞的思路可以简化为:
*寻找进程credential地址
*修改进程credential中自身的uid以及能力

#具体案例
[exploit by retme7](https://github.com/retme7/CVE-2014-4322_poc)
1、打开驱动、更改进程名
有漏洞的驱动位于/dev/qseecom，首先需要打开这个驱动文件对它进行操作，第一个值得注意的地方是exploit一开始就调用了prctl更改自己的进程名，这个举动的目的是让后面的程序更容易定位特定内存位置。

```c
prctl(PR_SET_NAME, "ihoo.darkytools", 0, 0, 0);
```

2、调用QSEECOM_IOCTL_SET_MEM_PARAM_REQ传入共享内存句柄以及shellcode内存地址



